generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Bimbingan {
  id        String         @id
  tanggal   DateTime
  catatan   String
  status    StatusValidasi
  nim       String
  nip       String
  Mahasiswa Mahasiswa      @relation(fields: [nim], references: [nim])
  Dosen     Dosen          @relation(fields: [nip], references: [nip])

  @@index([id])
}

model DailyReport {
  id                String              @id
  tanggal           DateTime
  status            StatusValidasi
  catatan           String?
  latitude          Float
  longitude         Float
  nim               String
  Mahasiswa         Mahasiswa           @relation(fields: [nim], references: [nim])
  DetailDailyReport DetailDailyReport[]

  @@index([id])
}

model DetailDailyReport {
  id                 Int         @id @default(autoincrement())
  judul_kegiatan     String
  deskripsi_kegiatan String
  waktu              DateTime
  id_daily_report    String
  DailyReport        DailyReport @relation(fields: [id_daily_report], references: [id])

  @@index([id])
}

model Dokumen {
  id             String        @id
  nim            String
  jenis_dokumen  JenisDokumen
  file_path      String
  tanggal_upload DateTime      @default(now())
  status         DokumenStatus @default(submitted)
  komentar       String?
  Mahasiswa      Mahasiswa     @relation(fields: [nim], references: [nim])

  @@index([nim])
}

model Dosen {
  nip                               String          @id
  nama                              String
  email                             String          @unique
  no_hp                             String
  chat_id                           String          @unique
  Bimbingan                         Bimbingan[]
  Jadwal                            Jadwal[]
  NilaiPenguji                      Nilai[]          @relation("NilaiToPenguji")
  NilaiPembimbing                   Nilai[]          @relation("NilaiToPembimbing")
  PendaftaranKP                     PendaftaranKP[]

  @@index([nip])
}

model Instansi {
  id                 Int                  @id @default(autoincrement())
  nama               String
  alamat             String
  jenis              JenisInstansi
  profil_singkat     String
  status             StatusInstansi       @default(PENDING)
  PembimbingInstansi PembimbingInstansi[]

  @@index([id])
}

model Jadwal {
  id            String        @id
  nim           String
  nip           String
  tanggal       DateTime
  waktu_mulai   DateTime
  waktu_selesai DateTime
  ruangan_nama  String
  status        StatusSeminar @default(pending)
  Mahasiswa     Mahasiswa     @relation(fields: [nim], references: [nim])
  Dosen         Dosen         @relation(fields: [nip], references: [nip])
  Ruangan       Ruangan       @relation(fields: [ruangan_nama], references: [nama])
  Nilai         Nilai?

  @@index([nim])
  @@index([nip])
  @@index([ruangan_nama])
}

model LogJadwal {
  id                String    @id
  jadwal_seminar_id String
  log_type          LogType
  nip               String
  tanggal_lama      DateTime?
  tanggal_baru      DateTime?
  ruangan_lama      String?
  ruangan_baru      String?
  keterangan        String?
  created_at        DateTime  @default(now())

  @@index([jadwal_seminar_id])
}

model Mahasiswa {
  nim           String          @id
  nama          String
  email         String          @unique
  Bimbingan     Bimbingan[]
  DailyReport   DailyReport[]
  Dokumen       Dokumen[]
  Jadwal        Jadwal[]
  NilaiInstansi NilaiInstansi?
  PendaftaranKP PendaftaranKP[]
  Nilai         Nilai[]

  @@index([nim])
}

model Nilai {
  id                                String      @id
  nim                               String
  jadwal_seminar_id                 String      @unique
  nip_penguji                       String
  nip_pembimbing                    String
  nilai_pembimbing                  Float
  nilai_penguji                     Float
  note_pembimbing                   String?
  note_penguji                      String?
  Jadwal                            Jadwal      @relation(fields: [jadwal_seminar_id], references: [id])
  DosenPenguji                      Dosen?      @relation("NilaiToPenguji", fields: [nip_penguji], references: [nip])
  DosenPembimbing                   Dosen?      @relation("NilaiToPembimbing", fields: [nip_pembimbing], references: [nip])
  Mahasiswa                         Mahasiswa[]

  @@index([jadwal_seminar_id])
}

model NilaiInstansi {
  id                     String             @id
  tanggal                DateTime
  nilai_angka            Float
  nilai_huruf            String
  nim                    String             @unique
  id_pembimbing_instansi String
  PembimbingInstansi     PembimbingInstansi @relation(fields: [id_pembimbing_instansi], references: [id])
  Mahasiswa              Mahasiswa          @relation(fields: [nim], references: [nim])

  @@index([id])
}

model PembimbingInstansi {
  id            String          @id
  nama          String
  email         String          @unique
  jabatan       String
  no_hp         String
  id_instansi   Int
  NilaiInstansi NilaiInstansi[]
  Instansi      Instansi        @relation(fields: [id_instansi], references: [id])
  PendaftaranKP PendaftaranKP[]

  @@index([id])
}

model PendaftaranKP {
  nim                        String
  semester                   Int
  tanggalTerdaftar           DateTime           @default(now())
  tanggalMulai               DateTime?
  tenggatWaktu               DateTime
  gagal                      Boolean            @default(false)
  tanggalSelesai             DateTime?
  linkSuratPengantar         String?
  linkSuratBalasan           String?
  linkSuratPenunjukkanDospem String?
  alasanLanjutKP             String?
  linkSuratPerpanjanganKP    String?
  id_pembimbing_instansi     String
  nip                        String?
  PembimbingInstansi         PembimbingInstansi @relation(fields: [id_pembimbing_instansi], references: [id])
  Mahasiswa                  Mahasiswa          @relation(fields: [nim], references: [nim])
  Dosen                      Dosen?             @relation(fields: [nip], references: [nip])

  @@id([nim, semester])
  @@index([nim, semester])
}

model Ruangan {
  nama   String   @id @unique
  Jadwal Jadwal[]
}

enum DokumenStatus {
  submitted
  verified
  rejected
}

enum JenisDokumen {
  SURAT_KETERANGAN_SELESAI_KP
  LAPORAN_TAMBAHAN_KP
  ID_SURAT_UNDANGAN
  FORM_KEHADIRAN_SEMINAR
  SURAT_UNDANGAN_SEMINAR_HASIL
  BERITA_ACARA_SEMINAR
  DAFTAR_HADIR_SEMINAR
  LEMBAR_PENGESAHAN_KP
  REVISI_DAILY_REPORT
  REVISI_LAPORAN_TAMBAHAN
  SISTEM_KP_FINAL
}

enum JenisInstansi {
  SWASTA
  PEMERINTAHAN
  PENDIDIKAN
  UMKM
}

enum LogType {
  created
  updated
  cancelled
  rescheduled
}

enum StatusInstansi {
  PENDING
  AKTIF
  TIDAK_AKTIF
}

enum StatusSeminar {
  pending
  scheduled
  completed
  cancelled
}

enum StatusValidasi {
  MENUNGGU
  VALID
  REVISI
}
